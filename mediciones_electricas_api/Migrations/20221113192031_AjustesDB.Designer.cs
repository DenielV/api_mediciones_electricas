// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mediciones_electricas_api.Models;

#nullable disable

namespace mediciones_electricas_api.Migrations
{
    [DbContext(typeof(mediciones_electricasContext))]
    [Migration("20221113192031_AjustesDB")]
    partial class AjustesDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("mediciones_electricas_api.Models.Empleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Apellido")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("apellido");

                    b.Property<string>("Contraseña")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("contraseña");

                    b.Property<int>("IdPuesto")
                        .HasColumnType("int")
                        .HasColumnName("idPuesto");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre");

                    b.Property<int>("Turno")
                        .HasColumnType("int")
                        .HasColumnName("turno");

                    b.HasKey("Id");

                    b.HasIndex("IdPuesto");

                    b.ToTable("empleados", (string)null);
                });

            modelBuilder.Entity("mediciones_electricas_api.Models.Equipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripcion");

                    b.HasKey("Id");

                    b.ToTable("equipos", (string)null);
                });

            modelBuilder.Entity("mediciones_electricas_api.Models.EquiposEmpleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("IdEmpleado")
                        .HasColumnType("int")
                        .HasColumnName("idEmpleado");

                    b.Property<int?>("IdEquipo")
                        .HasColumnType("int")
                        .HasColumnName("idEquipo");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpleado");

                    b.HasIndex("IdEquipo");

                    b.ToTable("equiposEmpleado", (string)null);
                });

            modelBuilder.Entity("mediciones_electricas_api.Models.EquiposProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("IdEquipo")
                        .HasColumnType("int")
                        .HasColumnName("idEquipo");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    b.HasKey("Id");

                    b.HasIndex("IdEquipo");

                    b.HasIndex("IdProducto");

                    b.ToTable("equiposProductos", (string)null);
                });

            modelBuilder.Entity("mediciones_electricas_api.Models.LineaProduccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Area")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("area");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.HasKey("Id");

                    b.ToTable("lineaProduccion", (string)null);
                });

            modelBuilder.Entity("mediciones_electricas_api.Models.Login", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Contraseña")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("contraseña");

                    b.Property<string>("Usuario")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("usuario");

                    b.HasKey("Id");

                    b.ToTable("login", (string)null);
                });

            modelBuilder.Entity("mediciones_electricas_api.Models.Modelo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    b.Property<int>("IdTestPlan")
                        .HasColumnType("int")
                        .HasColumnName("idTestPlan");

                    b.HasKey("Id");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdTestPlan");

                    b.ToTable("modelos", (string)null);
                });

            modelBuilder.Entity("mediciones_electricas_api.Models.Orden", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("FechaEntrega")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("fechaEntrega");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("fechaInicio");

                    b.HasKey("Id");

                    b.ToTable("Orden", (string)null);
                });

            modelBuilder.Entity("mediciones_electricas_api.Models.OrdenProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("IdModelo")
                        .HasColumnType("int")
                        .HasColumnName("idModelo");

                    b.Property<int?>("IdOrden")
                        .HasColumnType("int")
                        .HasColumnName("idOrden");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    b.Property<string>("Serie")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("serie");

                    b.HasKey("Id");

                    b.HasIndex("IdModelo");

                    b.HasIndex("IdOrden");

                    b.HasIndex("IdProducto");

                    b.ToTable("ordenProductos", (string)null);
                });

            modelBuilder.Entity("mediciones_electricas_api.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Desviaciones")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("desviaciones");

                    b.Property<string>("Especificaciones")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("especificaciones");

                    b.Property<string>("ListaParte")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("listaParte");

                    b.Property<string>("Procedimiento")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("procedimiento");

                    b.HasKey("Id");

                    b.ToTable("productos", (string)null);
                });

            modelBuilder.Entity("mediciones_electricas_api.Models.Prueba", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("fecha");

                    b.Property<int>("IdEmpleado")
                        .HasColumnType("int")
                        .HasColumnName("idEmpleado");

                    b.Property<int>("IdEquipo")
                        .HasColumnType("int")
                        .HasColumnName("idEquipo");

                    b.Property<int>("IdLineaProd")
                        .HasColumnType("int")
                        .HasColumnName("idLineaProd");

                    b.Property<int>("IdModelo")
                        .HasColumnType("int")
                        .HasColumnName("idModelo");

                    b.Property<bool>("Resultado")
                        .HasColumnType("bit")
                        .HasColumnName("resultado");

                    b.Property<string>("Serie")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("serie");

                    b.Property<double>("valorPrueba")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpleado");

                    b.HasIndex("IdEquipo");

                    b.HasIndex("IdLineaProd");

                    b.HasIndex("IdModelo");

                    b.ToTable("pruebas", (string)null);
                });

            modelBuilder.Entity("mediciones_electricas_api.Models.Puesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripcion");

                    b.Property<decimal>("Salario")
                        .HasColumnType("money")
                        .HasColumnName("salario");

                    b.HasKey("Id");

                    b.ToTable("puestos", (string)null);
                });

            modelBuilder.Entity("mediciones_electricas_api.Models.TestPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("Ruta")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("ruta");

                    b.HasKey("Id");

                    b.ToTable("testPlan", (string)null);
                });

            modelBuilder.Entity("mediciones_electricas_api.Models.Empleado", b =>
                {
                    b.HasOne("mediciones_electricas_api.Models.Puesto", "IdPuestoNavigation")
                        .WithMany("Empleados")
                        .HasForeignKey("IdPuesto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__empleados__idPue__6C190EBB");

                    b.Navigation("IdPuestoNavigation");
                });

            modelBuilder.Entity("mediciones_electricas_api.Models.EquiposEmpleado", b =>
                {
                    b.HasOne("mediciones_electricas_api.Models.Empleado", "IdEmpleadoNavigation")
                        .WithMany("EquiposEmpleados")
                        .HasForeignKey("IdEmpleado")
                        .HasConstraintName("FK__equiposEm__idEmp__778AC167");

                    b.HasOne("mediciones_electricas_api.Models.Equipo", "IdEquipoNavigation")
                        .WithMany("EquiposEmpleados")
                        .HasForeignKey("IdEquipo")
                        .HasConstraintName("FK__equiposEm__idEqu__76969D2E");

                    b.Navigation("IdEmpleadoNavigation");

                    b.Navigation("IdEquipoNavigation");
                });

            modelBuilder.Entity("mediciones_electricas_api.Models.EquiposProducto", b =>
                {
                    b.HasOne("mediciones_electricas_api.Models.Equipo", "IdEquipoNavigation")
                        .WithMany("EquiposProductos")
                        .HasForeignKey("IdEquipo")
                        .HasConstraintName("FK__equiposPr__idEqu__6E01572D");

                    b.HasOne("mediciones_electricas_api.Models.Producto", "IdProductoNavigation")
                        .WithMany("EquiposProductos")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK__equiposPr__idPro__6EF57B66");

                    b.Navigation("IdEquipoNavigation");

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("mediciones_electricas_api.Models.Modelo", b =>
                {
                    b.HasOne("mediciones_electricas_api.Models.Producto", "IdProductoNavigation")
                        .WithMany("Modelos")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__modelos__idProdu__68487DD7");

                    b.HasOne("mediciones_electricas_api.Models.TestPlan", "IdTestPlanNavigation")
                        .WithMany("Modelos")
                        .HasForeignKey("IdTestPlan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__modelos__idTestP__693CA210");

                    b.Navigation("IdProductoNavigation");

                    b.Navigation("IdTestPlanNavigation");
                });

            modelBuilder.Entity("mediciones_electricas_api.Models.OrdenProducto", b =>
                {
                    b.HasOne("mediciones_electricas_api.Models.Modelo", "IdModeloNavigation")
                        .WithMany("OrdenProductos")
                        .HasForeignKey("IdModelo")
                        .HasConstraintName("FK__ordenProd__idMod__7C4F7684");

                    b.HasOne("mediciones_electricas_api.Models.Orden", "IdOrdenNavigation")
                        .WithMany("OrdenProductos")
                        .HasForeignKey("IdOrden")
                        .HasConstraintName("FK__ordenProd__idOrd__7A672E12");

                    b.HasOne("mediciones_electricas_api.Models.Producto", "IdProductoNavigation")
                        .WithMany("OrdenProductos")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK__ordenProd__idPro__7B5B524B");

                    b.Navigation("IdModeloNavigation");

                    b.Navigation("IdOrdenNavigation");

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("mediciones_electricas_api.Models.Prueba", b =>
                {
                    b.HasOne("mediciones_electricas_api.Models.Empleado", "IdEmpleadoNavigation")
                        .WithMany("Pruebas")
                        .HasForeignKey("IdEmpleado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__pruebas__idEmple__72C60C4A");

                    b.HasOne("mediciones_electricas_api.Models.Equipo", "IdEquipoNavigation")
                        .WithMany("Pruebas")
                        .HasForeignKey("IdEquipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__pruebas__idEquip__73BA3083");

                    b.HasOne("mediciones_electricas_api.Models.LineaProduccion", "IdLineaProdNavigation")
                        .WithMany("Pruebas")
                        .HasForeignKey("IdLineaProd")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__pruebas__idLinea__71D1E811");

                    b.HasOne("mediciones_electricas_api.Models.Modelo", "IdModeloNavigation")
                        .WithMany("Pruebas")
                        .HasForeignKey("IdModelo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__pruebas__idModel__70DDC3D8");

                    b.Navigation("IdEmpleadoNavigation");

                    b.Navigation("IdEquipoNavigation");

                    b.Navigation("IdLineaProdNavigation");

                    b.Navigation("IdModeloNavigation");
                });

            modelBuilder.Entity("mediciones_electricas_api.Models.Empleado", b =>
                {
                    b.Navigation("EquiposEmpleados");

                    b.Navigation("Pruebas");
                });

            modelBuilder.Entity("mediciones_electricas_api.Models.Equipo", b =>
                {
                    b.Navigation("EquiposEmpleados");

                    b.Navigation("EquiposProductos");

                    b.Navigation("Pruebas");
                });

            modelBuilder.Entity("mediciones_electricas_api.Models.LineaProduccion", b =>
                {
                    b.Navigation("Pruebas");
                });

            modelBuilder.Entity("mediciones_electricas_api.Models.Modelo", b =>
                {
                    b.Navigation("OrdenProductos");

                    b.Navigation("Pruebas");
                });

            modelBuilder.Entity("mediciones_electricas_api.Models.Orden", b =>
                {
                    b.Navigation("OrdenProductos");
                });

            modelBuilder.Entity("mediciones_electricas_api.Models.Producto", b =>
                {
                    b.Navigation("EquiposProductos");

                    b.Navigation("Modelos");

                    b.Navigation("OrdenProductos");
                });

            modelBuilder.Entity("mediciones_electricas_api.Models.Puesto", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("mediciones_electricas_api.Models.TestPlan", b =>
                {
                    b.Navigation("Modelos");
                });
#pragma warning restore 612, 618
        }
    }
}
